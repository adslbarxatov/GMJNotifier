<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutPage" xml:space="preserve">
    <value>About application</value>
  </data>
  <data name="AcceptButton" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="AddButton" xml:space="preserve">
    <value>Add as new</value>
  </data>
  <data name="ADPPage" xml:space="preserve">
    <value>Policy and EULA</value>
  </data>
  <data name="AlarmSettingsLabel" xml:space="preserve">
    <value>Allow:</value>
  </data>
  <data name="AllowLightSwitch" xml:space="preserve">
    <value>LED</value>
  </data>
  <data name="AllowOnLockedScreenSwitch" xml:space="preserve">
    <value>Text on locked screen</value>
  </data>
  <data name="AllowSoundSwitch" xml:space="preserve">
    <value>Sound</value>
  </data>
  <data name="AllowStartSwitch" xml:space="preserve">
    <value>Start service after exit</value>
  </data>
  <data name="AllowVibroSwitch" xml:space="preserve">
    <value>Vibration</value>
  </data>
  <data name="ApplyButton" xml:space="preserve">
    <value>Update selected</value>
  </data>
  <data name="AppPage" xml:space="preserve">
    <value>App webpage</value>
  </data>
  <data name="BeginningFieldLabel" xml:space="preserve">
    <value>Beginning:</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CommandButton0" xml:space="preserve">
    <value>Log</value>
  </data>
  <data name="CommandButton1" xml:space="preserve">
    <value>Request all</value>
  </data>
  <data name="CommandButton2" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="CompleteResetSwitch" xml:space="preserve">
    <value>Skip unchanged texts in “Request all” option</value>
  </data>
  <data name="CurlyTemplate" xml:space="preserve">
    <value>Remember to replace items enclosed in curly braces with what you want</value>
  </data>
  <data name="DeclineButton" xml:space="preserve">
    <value>Read</value>
  </data>
  <data name="DeleteButton" xml:space="preserve">
    <value>Delete selected</value>
  </data>
  <data name="DeleteMessage" xml:space="preserve">
    <value>Delete selected notification?</value>
  </data>
  <data name="DevPage" xml:space="preserve">
    <value>Ask developer</value>
  </data>
  <data name="EarlierMessage" xml:space="preserve">
    <value>--- Earlier ---</value>
  </data>
  <data name="EmailsAreUnavailable" xml:space="preserve">
    <value>E-mails are unavailable on this device</value>
  </data>
  <data name="EnabledLabel" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="EndingFieldLabel" xml:space="preserve">
    <value>Ending:</value>
  </data>
  <data name="FindDelimitersButton" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="FontSizeLabel" xml:space="preserve">
    <value>Font size: </value>
  </data>
  <data name="FreqFieldLabel" xml:space="preserve">
    <value>Update frequency: {0:D} minutes</value>
  </data>
  <data name="KeywordNotSpecified" xml:space="preserve">
    <value>Search keyword is missing in “Beginning” field</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Interface language:</value>
  </data>
  <data name="LaunchMessage" xml:space="preserve">
    <value>Notification service has started monitoring...
• Use buttons below to view full texts and customize UniNotifier;
• Click on notification to go to webpage from which it was received</value>
  </data>
  <data name="LaunchMessage10" xml:space="preserve">
    <value>;
• Set up notification sound, vibro, lights and visibility in system menu</value>
  </data>
  <data name="LinkFieldLabel" xml:space="preserve">
    <value>Link:</value>
  </data>
  <data name="LogPage" xml:space="preserve">
    <value>Notifications log</value>
  </data>
  <data name="LogSettingsLabel" xml:space="preserve">
    <value>Log settings:</value>
  </data>
  <data name="ManualPage" xml:space="preserve">
    <value>User manual</value>
  </data>
  <data name="NameFieldLabel" xml:space="preserve">
    <value>Name:</value>
  </data>
  <data name="NextButton" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="NotEnoughDataMessage" xml:space="preserve">
    <value>One of required fields is empty, or link to website is specified incorrectly</value>
  </data>
  <data name="NotificationButton" xml:space="preserve">
    <value>Go to</value>
  </data>
  <data name="NotificationsSettingsLabel" xml:space="preserve">
    <value>Notifications parameters:</value>
  </data>
  <data name="NotMatchingNames" xml:space="preserve">
    <value>Notification with the same name already added</value>
  </data>
  <data name="OccFieldLabel" xml:space="preserve">
    <value>Occurrence #{0:D}</value>
  </data>
  <data name="PolicyMessage" xml:space="preserve">
    <value>Before you can start using this tool, you must accept Application development policy and EULA. Do you want to open them in browser?

• Click “Accept” if you are already familiar and fully accepted them;
• Click “Read” if you want to open them in browser;
• To decline them, close the application</value>
  </data>
  <data name="ReadModeLabel" xml:space="preserve">
    <value>Read mode</value>
  </data>
  <data name="RestartApp" xml:space="preserve">
    <value>Restart the application</value>
  </data>
  <data name="SearchFailure" xml:space="preserve">
    <value>Link to webpage is incorrect or keyword is not found on this page</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select language:</value>
  </data>
  <data name="SelectNotification" xml:space="preserve">
    <value>Select notification:</value>
  </data>
  <data name="SelectTemplate" xml:space="preserve">
    <value>Select template:</value>
  </data>
  <data name="ServiceSettingsLabel" xml:space="preserve">
    <value>Background service:</value>
  </data>
  <data name="ShareButton" xml:space="preserve">
    <value>Share</value>
  </data>
  <data name="ShareDisclaimer" xml:space="preserve">
    <value>Please note that app adds links to information sources to notifications you share (in order to respect the rights of authors). It is recommended not to remove them when distributing texts using this function</value>
  </data>
  <data name="SolutionPage" xml:space="preserve">
    <value>Notifications settings</value>
  </data>
  <data name="SpecialNotificationsSwitch" xml:space="preserve">
    <value>Enable special notifications</value>
  </data>
  <data name="TemplateButton" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="Tip01" xml:space="preserve">
    <value>Here you can configure notifications settings.

Note that going to settings and full texts will pause the background service. It will continue working after closing / hiding the settings form</value>
  </data>
  <data name="Tip02" xml:space="preserve">
    <value>WARNING!
1. App can only receive notifications if your device is plugged in and / or the screen is not in sleep mode.
2. Some devices require manual setting of notification attributes (vibro, lights, sounds). App settings may not work</value>
  </data>
  <data name="Tip03" xml:space="preserve">
    <value>For using this function specify some keyword from needed site's area in “Beginning” field</value>
  </data>
  <data name="Tip04" xml:space="preserve">
    <value>Detailed instructions for setting up the service are available on YouTube. Swipe right to the app details page and select the video user manual</value>
  </data>
  <data name="TipHeader01" xml:space="preserve">
    <value>Hello, dear user!</value>
  </data>
</root>